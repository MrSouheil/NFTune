{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Souheil\\\\Desktop\\\\senior\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const [data, updateData] = useState([]);\n  const [dataFetched, updateFetched] = useState(false);\n  const [address, updateAddress] = useState(\"0x\");\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\n  const axios = require('axios');\n  async function getNFTData(tokenId) {\n    const ethers = require(\"ethers\");\n    let sumPrice = 0;\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const addr = await signer.getAddress();\n\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n\n    //create an NFT Token\n    let transaction = await contract.getMyNFTs();\n\n    /*\r\n    * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\r\n    * and creates an object of information that is to be displayed\r\n    */\n    const items = await Promise.all(transaction.map(async i => {\n      console.log(i);\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      console.log(\"before 36\");\n      axios.get('https://api.pinata.cloud/pinning/pinJSONToIPFS/' + tokenURI).then(response => {\n        console.log(response.data.url);\n        console.log(response.data.explanation);\n        let meta = response.data;\n        console.log(\"after 36\");\n        console.log(meta.data);\n        meta = meta.data;\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.image,\n          name: meta.name,\n          description: meta.description\n        };\n        sumPrice += Number(price);\n        return item;\n      }).catch(error => {\n        console.log(error);\n      });\n    }));\n    console.log(\"here..\");\n    updateData(items);\n    updateFetched(true);\n    updateAddress(addr);\n    updateTotalPrice(sumPrice.toPrecision(3));\n  }\n  const params = useParams();\n  const tokenId = params.tokenId;\n  if (!dataFetched) getNFTData(tokenId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileClass\",\n    style: {\n      \"min-height\": \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileClass\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex text-center flex-col mt-11 md:text-2xl text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Wallet Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"No. of NFTs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Total Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), totalPrice, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col text-center items-center mt-11 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold\",\n          children: \"Your NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center flex-wrap max-w-screen-xl\",\n          children: data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(NFTTile, {\n              data: value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-10 text-xl\",\n          children: data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"2EsCq+A3YKmNbGfcrpDlqLJtmds=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\n;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["Navbar","useLocation","useParams","MarketplaceJSON","axios","useState","NFTTile","Profile","data","updateData","dataFetched","updateFetched","address","updateAddress","totalPrice","updateTotalPrice","require","getNFTData","tokenId","ethers","sumPrice","provider","providers","Web3Provider","window","ethereum","signer","getSigner","addr","getAddress","contract","Contract","abi","transaction","getMyNFTs","items","Promise","all","map","i","console","log","tokenURI","get","then","response","url","explanation","meta","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","Number","catch","error","toPrecision","params","length","value","index"],"sources":["C:/Users/Souheil/Desktop/senior/src/components/Profile.js"],"sourcesContent":["import Navbar from \"./Navbar\";\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport NFTTile from \"./NFTTile\";\r\n\r\n\r\nexport default function Profile () {\r\n    const [data, updateData] = useState([]);\r\n    const [dataFetched, updateFetched] = useState(false);\r\n    const [address, updateAddress] = useState(\"0x\");\r\n    const [totalPrice, updateTotalPrice] = useState(\"0\");\r\n    const axios = require('axios');\r\n\r\n    async function getNFTData(tokenId) {\r\n        const ethers = require(\"ethers\");\r\n        let sumPrice = 0;\r\n        //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const addr = await signer.getAddress();\r\n\r\n        //Pull the deployed contract instance\r\n        let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer)\r\n\r\n        //create an NFT Token\r\n        let transaction = await contract.getMyNFTs()\r\n\r\n        /*\r\n        * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\r\n        * and creates an object of information that is to be displayed\r\n        */\r\n        const items = await Promise.all(transaction.map(async i => {\r\n            console.log(i);\r\n            const tokenURI = await contract.tokenURI(i.tokenId);\r\n            console.log(\"before 36\");\r\n            axios.get('https://api.pinata.cloud/pinning/pinJSONToIPFS/' + tokenURI)\r\n                .then(response => {\r\n            console.log(response.data.url);\r\n            console.log(response.data.explanation);\r\n            let meta = response.data;\r\n            console.log(\"after 36\");\r\n            console.log(meta.data);\r\n            meta = meta.data;\r\n\r\n            let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\r\n            let item = {\r\n                price,\r\n                tokenId: i.tokenId.toNumber(),\r\n                seller: i.seller,\r\n                owner: i.owner,\r\n                image: meta.image,\r\n                name: meta.name,\r\n                description: meta.description,\r\n                \r\n            }\r\n            sumPrice += Number(price);\r\n            return item;\r\n            })\r\n            .catch(error => {\r\n            console.log(error);\r\n  });\r\n            \r\n            \r\n        }))\r\n\r\n        console.log(\"here..\");\r\n        updateData(items);\r\n        updateFetched(true);\r\n        updateAddress(addr);\r\n        updateTotalPrice(sumPrice.toPrecision(3));\r\n    }\r\n\r\n    const params = useParams();\r\n    const tokenId = params.tokenId;\r\n    if(!dataFetched)\r\n        getNFTData(tokenId);\r\n\r\n    return (\r\n        <div className=\"profileClass\" style={{\"min-height\":\"100vh\"}}>\r\n            <Navbar></Navbar>\r\n            <div className=\"profileClass\">\r\n            <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\r\n                <div className=\"mb-5\">\r\n                    <h2 className=\"font-bold\">Wallet Address</h2>  \r\n                    {address}\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\r\n                    <div>\r\n                        <h2 className=\"font-bold\">No. of NFTs</h2>\r\n                        {data.length}\r\n                    </div>\r\n                    <div className=\"ml-20\">\r\n                        <h2 className=\"font-bold\">Total Value</h2>\r\n                        {totalPrice} ETH\r\n                    </div>\r\n            </div>\r\n            <div className=\"flex flex-col text-center items-center mt-11 text-white\">\r\n                <h2 className=\"font-bold\">Your NFTs</h2>\r\n                <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\r\n                    {data.map((value, index) => {\r\n                    return <NFTTile data={value} key={index}></NFTTile>;\r\n                    })}\r\n                </div>\r\n                <div className=\"mt-10 text-xl\">\r\n                    {data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\":\"\"}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}